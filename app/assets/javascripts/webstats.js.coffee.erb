# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

all_json = {}

run_query_art_count = (client, element, type) ->
	if $('#time_span').val() && $('#time_span').val() != ''
		query_art_count = new (Keen.Query)('count',
			eventCollection: 'artSeen'
			groupBy: 'picName'
			timeframe: $('#time_span').val())
	else
		query_art_count = new (Keen.Query)('count',
			eventCollection: 'artSeen'
			groupBy: 'picName'
			start: $('#time_span').attr 'fromDate'
			end: $('#time_span').attr 'toDate')

	$(element).append('<div class="loady"><div class="arc1"></div></div>');

	client.run query_art_count, (err, res) ->
		if err
		else
			if all_json[element] == undefined
				all_json[element] = {}
			else
				all_json[element]['old-data'] = all_json[element]['data']
			all_json[element]['type'] = type
			all_json[element]['data'] = res.result
			all_json[element]['data'].sort (a, b) ->
				if (a.picName > b.picName)
					return 1;
				if (a.picName < b.picName)
					return -1;
				return 0

			drawBar element
		return

	return

resize_p = ->
	$('.chart').each ->
		if all_json['#'+$(this).attr('id')]
			if all_json['#'+$(this).attr('id')]['type'] == 'barchart'
				drawBar '#'+$(this).attr('id')
			else
				drawBar '#'+$(this).attr('id')
	return

ready = ->
	client = new Keen(
		projectId: '<%= Rails.application.secrets.keen_projectid %>',
		readKey: '<%= Rails.application.secrets.keen_readkey %>',
		protocol: 'https',
		host: 'api.keen.io/3.0',
		requestType: 'jsonp')

	$('#daterange span').html(moment().subtract(29, 'days').format('D/MMMM/YYYY') + ' - ' + moment().format('D/MMMM/YYYY'));
	$('#daterange').daterangepicker {
			format: 'DD/MM/YYYY',
			startDate: moment().subtract(29, 'days'),
			endDate: moment(),
			minDate: '01/01/2012',
			maxDate: '31/12/2015',
			dateLimit: { days: 60 },
			showDropdowns: true,
			showWeekNumbers: true,
			timePicker: false,
			timePickerIncrement: 1,
			timePicker12Hour: true,
			ranges: {
				'Today': [moment(), moment()],
				'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
				'Last 7 Days': [moment().subtract(6, 'days'), moment()],
				'Last 30 Days': [moment().subtract(29, 'days'), moment()],
				'This Month': [moment().startOf('month'), moment().endOf('month')],
				'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
			},
			opens: 'left',
			drops: 'down',
			buttonClasses: ['btn', 'btn-sm'],
			applyClass: 'btn-primary',
			cancelClass: 'btn-default',
			separator: ' to ',
			locale: {
				applyLabel: 'Submit',
				cancelLabel: 'Cancel',
				fromLabel: 'From',
				toLabel: 'To',
				customRangeLabel: 'Custom',
				daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr','Sa'],
				monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
				firstDay: 1
			}
		},
		(start, end, label) ->
			$('#daterange span').html(start.format('D/MMMM/YYYY') + ' - ' + end.format('D/MMMM/YYYY'));

			$('.time-span').removeClass('btn-success')
			$('#daterange').removeClass('btn-default')
			$('.time-span').addClass('btn-default')
			$('#daterange').addClass('btn-success')

			$('#time_span').val ''
			$('#time_span').attr 'fromDate', start.toISOString()
			$('#time_span').attr 'toDate', end.toISOString()

			run_query_art_count client, '#chart01', 'barchart'
			return

	$('.time-span').click ->
		$('.time-span').removeClass('btn-success')
		$('#pick_date').removeClass('btn-success')
		$('.time-span').addClass('btn-default')
		$('#pick_date').addClass('btn-default')
		$(this).removeClass('btn-default')
		$(this).addClass('btn-success')

		$('#time_span').val $(this).attr('data-time')
		$('#time_span').attr 'fromDate', ''
		$('#time_span').attr 'toDate', ''

		run_query_art_count client, '#chart01', 'barchart'
		return

	if $('body.webstats.art').length
		run_query_art_count client, '#chart01', 'barchart'

	return

drawBar = (element) ->
	$(element).html('');
	dataset = all_json[element]['data']

	g_h = 200
	g_w = $(element).width()
	g_o = g_w * 10 / 100
	i_w = (g_w - g_o) / dataset.length

	i = 0
	total = 0
	max = 0
	while i < dataset.length
		total += dataset[i].result
		if dataset[i].result > max
			max = dataset[i].result
		i++

	if svgChart
		svgChart.remove()

	svgChart = d3.select(element)
		.append "svg"
		.attr "width", g_w
		.attr "height", g_h

	svgChart.selectAll "rect"
		.data dataset
		.enter()
		.append "rect"
		.attr "x", (d, i) ->
			return (i_w + (g_o / (dataset.length - 1))) * i
		.attr "y", (d) ->
			return g_h - ((d.result / max) * g_h)
		.attr "width", (d) ->
			return i_w
		.attr "height", (d) ->
			return (d.result / max) * g_h
	return

$(document).ready ready
$(window).resize resize_p
$(document).on 'page:load', ready